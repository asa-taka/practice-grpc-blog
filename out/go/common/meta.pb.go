// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common/meta.proto

package common // import "github.com/asa-taka/practice-grpc-blog/out/go/common"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Meta struct {
	Created              *MutationLog `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *MutationLog `protobuf:"bytes,2,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Meta) Reset()         { *m = Meta{} }
func (m *Meta) String() string { return proto.CompactTextString(m) }
func (*Meta) ProtoMessage()    {}
func (*Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_fa0ed6538c5b8d03, []int{0}
}
func (m *Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meta.Unmarshal(m, b)
}
func (m *Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meta.Marshal(b, m, deterministic)
}
func (dst *Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meta.Merge(dst, src)
}
func (m *Meta) XXX_Size() int {
	return xxx_messageInfo_Meta.Size(m)
}
func (m *Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Meta proto.InternalMessageInfo

func (m *Meta) GetCreated() *MutationLog {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Meta) GetUpdated() *MutationLog {
	if m != nil {
		return m.Updated
	}
	return nil
}

type MutationLog struct {
	Date                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	UserId               int32                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MutationLog) Reset()         { *m = MutationLog{} }
func (m *MutationLog) String() string { return proto.CompactTextString(m) }
func (*MutationLog) ProtoMessage()    {}
func (*MutationLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_meta_fa0ed6538c5b8d03, []int{1}
}
func (m *MutationLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutationLog.Unmarshal(m, b)
}
func (m *MutationLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutationLog.Marshal(b, m, deterministic)
}
func (dst *MutationLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutationLog.Merge(dst, src)
}
func (m *MutationLog) XXX_Size() int {
	return xxx_messageInfo_MutationLog.Size(m)
}
func (m *MutationLog) XXX_DiscardUnknown() {
	xxx_messageInfo_MutationLog.DiscardUnknown(m)
}

var xxx_messageInfo_MutationLog proto.InternalMessageInfo

func (m *MutationLog) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *MutationLog) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func init() {
	proto.RegisterType((*Meta)(nil), "common.Meta")
	proto.RegisterType((*MutationLog)(nil), "common.MutationLog")
}

func init() { proto.RegisterFile("common/meta.proto", fileDescriptor_meta_fa0ed6538c5b8d03) }

var fileDescriptor_meta_fa0ed6538c5b8d03 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8e, 0xb1, 0x4b, 0x03, 0x31,
	0x14, 0x87, 0xa9, 0xd4, 0x2b, 0xa4, 0x93, 0xe7, 0xa0, 0x74, 0x51, 0x3a, 0xb9, 0x5c, 0x1e, 0xe8,
	0x58, 0x5c, 0xdc, 0x04, 0xbb, 0x1c, 0xe2, 0xe0, 0x22, 0xef, 0x72, 0xcf, 0x18, 0x6c, 0xfa, 0x42,
	0xee, 0xe5, 0xff, 0x97, 0x24, 0x3d, 0x70, 0xea, 0x14, 0xf2, 0xe3, 0xe3, 0x7d, 0x9f, 0xba, 0x32,
	0xec, 0x3d, 0x1f, 0xc1, 0x93, 0xa0, 0x0e, 0x91, 0x85, 0xdb, 0xa6, 0x4e, 0x9b, 0x3b, 0xcb, 0x6c,
	0x0f, 0x04, 0x65, 0x1d, 0xd2, 0x37, 0x88, 0xf3, 0x34, 0x09, 0xfa, 0x50, 0xc1, 0xed, 0xa8, 0x96,
	0x7b, 0x12, 0x6c, 0x3b, 0xb5, 0x32, 0x91, 0x50, 0x68, 0xbc, 0x5d, 0xdc, 0x2f, 0x1e, 0xd6, 0x8f,
	0xd7, 0xba, 0x9e, 0xd0, 0xfb, 0x24, 0x28, 0x8e, 0x8f, 0x6f, 0x6c, 0xfb, 0x99, 0xc9, 0x78, 0x0a,
	0x63, 0xc1, 0x2f, 0xce, 0xe0, 0x27, 0x66, 0xfb, 0xa1, 0xd6, 0xff, 0xf6, 0x56, 0xab, 0x65, 0xde,
	0x4f, 0xa6, 0x8d, 0xae, 0x91, 0x7a, 0x8e, 0xd4, 0xef, 0x73, 0x64, 0x5f, 0xb8, 0xf6, 0x46, 0xad,
	0xd2, 0x44, 0xf1, 0xcb, 0x55, 0xdb, 0x65, 0xdf, 0xe4, 0xef, 0xeb, 0xf8, 0xf2, 0xfc, 0xb9, 0xb3,
	0x4e, 0x7e, 0xd2, 0x90, 0xed, 0x80, 0x13, 0x76, 0x82, 0xbf, 0x08, 0x21, 0xa2, 0x11, 0x67, 0xa8,
	0xb3, 0x31, 0x98, 0x6e, 0x38, 0xb0, 0x05, 0x4e, 0x02, 0x96, 0xa1, 0x46, 0xee, 0xea, 0x33, 0x34,
	0xc5, 0xf8, 0xf4, 0x17, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xa2, 0x02, 0x2a, 0x41, 0x01, 0x00, 0x00,
}
